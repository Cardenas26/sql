CREATE TABLE student(
    student_id INT PRIMARY KEY,
    name VARCHAR(26),
    major VARCHAR(20)
);
//show the table
DESCRIBE student;
// delete table
DROP TABLE student;
//change table
ALTER TABLE student ADD gpa DECIMAL(3,2);

ALTER TABLE student DROP COLUMN gpa


//inserting data
SELECT * FROM student;
INSERT INTO student(student_id, name) VALUES( 3, 'Claire'

);


// auto increment
CREATE TABLE student(
    student_id INT AUTO_INCREMENT,
    name VARCHAR(26),
    major VARCHAR(20),
    PRIMARY KEY(student_id)
);

SELECT * FROM student;
INSERT INTO student(name, major) VALUES('Jack', 'Biology');
INSERT INTO student(name, major) VALUES('Kate', 'Sociology');

//updating data
UPDATE student
SET major='Bio'
WHERE major = 'Biology';


UPDATE student
SET name = 'Cesar', major = 'undecided'
WHERE student_id=1;

// deleting data
DELETE FROM student 
WHERE student_id=2;

//ascend & descend order
SELECT *
FROM student
ORDER BY student_id DESC; // ASC=ascend

//adding a foreign key
CREATE TABLE branch (
  branch_id INT PRIMARY KEY,
  branch_name VARCHAR(40),
  mgr_id INT,
  mgr_start_date DATE,
  FOREIGN KEY(mgr_id) REFERENCES employee(emp_id) ON DELETE SET NULL
);
ALTER TABLE employee
ADD FOREIGN KEY(branch_id)
REFERENCES branch(branch_id)
ON DELETE SET NULL;

ALTER TABLE employee
ADD FOREIGN KEY(super_id)
REFERENCES employee(emp_id)
ON DELETE SET NULL;

// adding a composite key
CREATE TABLE branch_supplier (
  branch_id INT,
  supplier_name VARCHAR(40),
  supply_type VARCHAR(40),
  // -- adding composite key --> // PRIMARY KEY(branch_id, supplier_name),
  FOREIGN KEY(branch_id) REFERENCES branch(branch_id) ON DELETE CASCADE
);

//Find all employees order by salary:
SELECT * FROM employee
ORDER by salary;
